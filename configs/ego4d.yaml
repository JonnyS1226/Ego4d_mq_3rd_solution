dataset_name: ego4d
train_split: ['train']
val_split: ['val']
dataset: {
  json_file: ./data/ego4d/ego4d_clip_annotations.json,
  feat_folder: ['../ego4d/v1/slowfast8x8_r101_k400_mq', '../ego4d/v1/omnivore_video_swinl_mq'],
  file_prefix: ,
  file_ext: .npy,
  num_classes: 110,
  input_dim: 3840,
  feat_stride: 1,
  num_frames: 1,
  trunc_thresh: 0.5,
  crop_ratio: [0.9, 1.0],
  max_seq_len: 1024,
  force_upsampling: True,
}
model: {
  backbone_arch: [2, 2, 9],
  regression_range: [[0, 4], [4, 8], [8, 16], [16, 32], [32, 64], [64, 128], [128, 256], [256, 512], [512, 1024], [1024, 10000]],
  fpn_type: identity,
  max_buffer_len_factor: 1.0,
  # 1024 -> 512 -> 256  -> 128 -> 64 -> 32 -> 16 -> 8 -> 4 -> 2
  n_mha_win_size: [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
  # shrink the model for reduced input feature channels
  n_head: 8,
  embd_dim: 512,
  fpn_dim: 512,
  head_dim: 512,
  use_abs_pe: True,
}
opt: {
  learning_rate: 0.001,
  epochs: 30,
  weight_decay: 0.1,
}
loader: {
  batch_size: 16,
}
train_cfg: {
  init_loss_norm: 200,
  clip_grad_l2norm: 1.0,
  cls_prior_prob: 0.01,
  center_sample: radius,
  center_sample_radius: 1.5,
  label_smoothing: 0.1,
  droppath: 0.1,
  loss_weight: 0.5,
}

# similar to THUMOS
test_cfg: {
  voting_thresh: 0.9,
  pre_nms_topk: 2000,
  max_seg_num: 200,
  min_score: 0.0001,
  # score fusion
  multiclass_nms: True,
  nms_sigma: 0.99,
  # ext_score_file: ./data/anet_1.3/annotations/cuhk_val_simp_share.json,
  duration_thresh: 0.01,
}
output_folder: ./logs/


